
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
/*import java.net.NoRouteToHostException;

import static java.awt.BorderLayout.NORTH;
import static javax.swing.SwingConstants.*;*/
public class FenetreJeu extends JPanel implements KeyListener{

        private Configuration terrain;
        private int tailleCase = 25;
        private int hauteur, largeur;
        private int size=100;
        private JFrame frame;
        private Image player;

        public FenetreJeu(Configuration t) {
            this.hauteur = t.getNiveau().getY();
            this.largeur = t.getNiveau().getX();
            this.terrain = t;

            setBackground(Color.BLACK);
            setPreferredSize(new Dimension(largeur * tailleCase, hauteur * tailleCase+32));
            this.setBounds(0,0,largeur*tailleCase,hauteur*tailleCase);
            JFrame frame = new JFrame("Sokob");
            this.frame = frame;
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            frame.getContentPane().add(this);
            frame.pack();
            frame.setVisible(true);
            frame.addKeyListener(this);

        }
        public JFrame getFrame(){
            return this.frame;
        }

        public void paintComponent(Graphics g) {
            super.paintComponent(g);
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            player=new ImageIcon("playerimg.png").getImage();
            //parcourt toutes les cases
            for (int l = 0; l < this.hauteur; l++) {
                for (int c = 0; c < this.largeur; c++) {
                    Position p=new Position(l,c);
                    Element tmp = terrain.get(p);
                    if (tmp instanceof Immobile) {
                        if( tmp.getType().name().equals("MUR")){
                            g2d.setColor(new Color(132,46,27));
                            g2d.fillRoundRect(l*size, c*size, size, size, 20, 20);
                            //g.setColor(Color.GRAY);
                            //g.fillRect(cc.col*tailleCase,cc.lig*tailleCase,tailleCase,tailleCase);
                        }
                        if(terrain.estCible(p)) {
                            g2d.setColor(Color.white);
                            g2d.fillRoundRect(l * size, c * size, size, size, 20, 20);
                        }
                    }
                    if (tmp instanceof Mobile) {

                        if(terrain.estJoueur(p)){
                            g.drawImage(player,l,c,null);
                            //frame.getContentPane().add();
                            //g.setColor(Color.GREEN);
                            //g.fillOval(l*size, c*size, size, size);
                        }
                        if(tmp.getType().name().equals("CAISSE")){
                            g2d.setColor(Color.yellow);
                            g2d.fillRoundRect(l*size, c*size, size, size, 20, 20);

                        }
                    }

                }
            }
           /* String ss=String.valueOf(terrain.getBerger().resistance);
            g.setFont(new Font("Verdana",1,20));
            g.setColor(Color.red);
            g.drawString("player resistance: "+ss,largeur*tailleCase-250,17);
            g.drawString("Score: "+String.valueOf(Jeu.sortis),largeur,17);*/

        }
        /*public void drawEye(Graphics g,Case c,Direction d){
            switch(d){
                case est -> g.fillOval(c.col*tailleCase+((tailleCase/2)+4),c.lig*tailleCase+(tailleCase/3),(tailleCase/3),(tailleCase/3));
                case ouest -> g.fillOval(c.col*tailleCase,c.lig*tailleCase+(tailleCase/3),(tailleCase/3),(tailleCase/3));
                case nord -> g.fillOval(c.col*tailleCase+(tailleCase/3),c.lig*tailleCase,(tailleCase/3),(tailleCase/3));
                case sud -> g.fillOval(c.col*tailleCase+(tailleCase/3),c.lig*tailleCase+((tailleCase/2)+4),(tailleCase/3),(tailleCase/3));
            }
        }*/
        public void ecranFinal() {
            frame.remove(this);
            //JLabel label = new JLabel("Score " + n);
            JLabel label = new JLabel("YOU WIN");
            label.setFont(new Font("Verdana", 1, 20));
            label.setHorizontalAlignment(SwingConstants.CENTER);
            label.setSize(this.getSize());
            frame.getContentPane().add(label);
            //ajout boutton
            JButton restart= new JButton("Rejouer");
            restart.setFont(new Font("Verdana", 1, 20));
            restart.setForeground(Color.black);
            restart.setHorizontalAlignment(SwingConstants.CENTER);
            restart.setFocusable(false);
            restart.setBounds((largeur/2)*tailleCase-100,(hauteur/2)*tailleCase+50,200,70);
            restart.setVisible(true);
            frame.getContentPane().add(restart);
            restart.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {

                }

                @Override
                public void mousePressed(MouseEvent e) {

                }

                @Override
                public void mouseReleased(MouseEvent e) {

                }

                @Override
                public void mouseEntered(MouseEvent e) {

                }

                @Override
                public void mouseExited(MouseEvent e) {

                }
            });
            frame.repaint();

        }

        @Override
        public void keyTyped(KeyEvent e) {

        }
        @Override
        public void keyPressed(KeyEvent e) {
            /*switch(e.getKeyCode()){
                case KeyEvent.VK_LEFT: System.out.println("left");terrain.getBerger().action(terrain.getCaseCarte(Terrain.lj, Terrain.colj), terrain.getCaseCarte(Terrain.lj, Terrain.colj-1) );
                    frame.repaint();break;
                case KeyEvent.VK_RIGHT: System.out.println("right");terrain.getBerger().action(terrain.getCaseCarte(Terrain.lj, Terrain.colj), terrain.getCaseCarte(Terrain.lj, Terrain.colj+1 ) );
                    frame.repaint();break;
                case KeyEvent.VK_UP: System.out.println("uppp");terrain.getBerger().action(terrain.getCaseCarte(Terrain.lj, Terrain.colj), terrain.getCaseCarte(Terrain.lj-1, Terrain.colj) );
                    frame.repaint();break;
                case KeyEvent.VK_DOWN: System.out.println("down");terrain.getBerger().action(terrain.getCaseCarte(Terrain.lj, Terrain.colj), terrain.getCaseCarte(Terrain.lj+1, Terrain.colj));
                    frame.repaint();break;
                case KeyEvent.VK_SPACE: terrain.getBerger().actionSortie(terrain.getCaseCarte(Terrain.lj, Terrain.colj));
            }*/
            switch(e.getKeyCode()) {
                case KeyEvent.VK_LEFT:System.out.println("left");terrain.getJoueur().bougerVers(Direction.Gauche);
                    frame.repaint();break;
                case KeyEvent.VK_RIGHT:System.out.println("right");terrain.getJoueur().bougerVers(Direction.Droite);
                    frame.repaint();break;
                case KeyEvent.VK_UP:System.out.println("up");terrain.getJoueur().bougerVers(Direction.Haut);
                    frame.repaint();break;
                case KeyEvent.VK_DOWN:System.out.println("down");terrain.getJoueur().bougerVers(Direction.Bas);
                    frame.repaint();break;
                //case KeyEvent.VK_ENTER: if(terrain.victoire()){ecranFinal();}
            }

            }

        @Override
        public void keyReleased(KeyEvent e) {

        }

    }
    /*super.paintComponent(g);
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //mur
            g2d.setColor(brickColor);
            g2d.fillRoundRect(8*size, 10*size, size, size, 20, 20);
            g.fillRect(2*size, 2*size, size, size, 20, 20);*/


